{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ph-projects/madchef-a11-next.js/lib/getDBCollectionName.js"],"sourcesContent":["const { MongoClient, ServerApiVersion } = require(\"mongodb\");\r\nconst uri = `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@cluster0.m65dh.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0`;\r\n\r\nconst client = new MongoClient(uri, {\r\n  serverApi: {\r\n    version: ServerApiVersion.v1,\r\n    strict: true,\r\n    deprecationErrors: true,\r\n  },\r\n});\r\n\r\nexport default async function getDBCollectionName(collectionName) {\r\n  const clientPromise = await client.connect();\r\n  return clientPromise.db(\"madchef-next-js\").collection(collectionName);\r\n}\r\n"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE;AACvC,MAAM,MAAM,CAAC,cAAc,EAAE,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,OAAO,CAAC,yEAAyE,CAAC;AAElJ,MAAM,SAAS,IAAI,YAAY,KAAK;IAClC,WAAW;QACT,SAAS,iBAAiB,EAAE;QAC5B,QAAQ;QACR,mBAAmB;IACrB;AACF;AAEe,eAAe,oBAAoB,cAAc;IAC9D,MAAM,gBAAgB,MAAM,OAAO,OAAO;IAC1C,OAAO,cAAc,EAAE,CAAC,mBAAmB,UAAU,CAAC;AACxD","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ph-projects/madchef-a11-next.js/app/api/user-register/route.js"],"sourcesContent":["import getDBCollectionName from \"@/lib/getDBCollectionName\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(req) {\r\n  const body = await req.json();\r\n  const userCollection = await getDBCollectionName(\"user\");\r\n  const isExist = await userCollection.findOne({ email: body.email });\r\n\r\n  try {\r\n    if (isExist) {\r\n      return NextResponse.json(\r\n        { message: \"You already have an account\", success: false },\r\n        { status: 409 }\r\n      );\r\n    }\r\n    const result = await userCollection.insertOne(body);\r\n    return NextResponse.json(\r\n      { success: true, message: \"login successfully\" },\r\n      { status: 201 }\r\n    );\r\n  } catch (error) {\r\n    return NextResponse.json({ error: error });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAG;IAC5B,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,iBAAiB,MAAM,CAAA,GAAA,4HAAA,CAAA,UAAmB,AAAD,EAAE;IACjD,MAAM,UAAU,MAAM,eAAe,OAAO,CAAC;QAAE,OAAO,KAAK,KAAK;IAAC;IAEjE,IAAI;QACF,IAAI,SAAS;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAA+B,SAAS;YAAM,GACzD;gBAAE,QAAQ;YAAI;QAElB;QACA,MAAM,SAAS,MAAM,eAAe,SAAS,CAAC;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAM,SAAS;QAAqB,GAC/C;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAM;IAC1C;AACF","debugId":null}}]
}