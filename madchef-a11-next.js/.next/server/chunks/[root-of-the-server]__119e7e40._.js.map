{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ph-projects/madchef-a11-next.js/lib/db/connectDB.js"],"sourcesContent":["const { MongoClient, ServerApiVersion } = require(\"mongodb\");\r\nconst uri = `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@cluster0.m65dh.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0`;\r\n\r\nlet client = new MongoClient(uri, {\r\n  serverApi: {\r\n    version: ServerApiVersion.v1,\r\n    strict: true,\r\n    deprecationErrors: true,\r\n  },\r\n});\r\nlet clientPromise = client.connect();\r\n\r\nexport default clientPromise;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE;AACvC,MAAM,MAAM,CAAC,cAAc,EAAE,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,OAAO,CAAC,yEAAyE,CAAC;AAElJ,IAAI,SAAS,IAAI,YAAY,KAAK;IAChC,WAAW;QACT,SAAS,iBAAiB,EAAE;QAC5B,QAAQ;QACR,mBAAmB;IACrB;AACF;AACA,IAAI,gBAAgB,OAAO,OAAO;uCAEnB","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ph-projects/madchef-a11-next.js/lib/db/getCollectionDB.js"],"sourcesContent":["import clientPromise from \"./connectDB\";\r\n\r\nexport async function getCollectionDB(collectionName) {\r\n  const client = await clientPromise;\r\n  const db = client.db(\"madchef-next-js\");\r\n  return db.collection(collectionName);\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,gBAAgB,cAAc;IAClD,MAAM,SAAS,MAAM,wHAAA,CAAA,UAAa;IAClC,MAAM,KAAK,OAAO,EAAE,CAAC;IACrB,OAAO,GAAG,UAAU,CAAC;AACvB","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ph-projects/madchef-a11-next.js/app/api/user-register/route.js"],"sourcesContent":["import { getCollectionDB } from \"@/lib/db/getCollectionDB\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(req) {\r\n  const body = await req.json();\r\n  const userCollection = await getCollectionDB(\"user\");\r\n  const result = await userCollection.insertOne(body);\r\n  return NextResponse.json(result);\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAG;IAC5B,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,iBAAiB,MAAM,CAAA,GAAA,8HAAA,CAAA,kBAAe,AAAD,EAAE;IAC7C,MAAM,SAAS,MAAM,eAAe,SAAS,CAAC;IAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}