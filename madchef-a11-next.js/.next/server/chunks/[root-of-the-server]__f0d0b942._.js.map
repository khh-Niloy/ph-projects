{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ph-projects/madchef-a11-next.js/lib/getDBCollectionName.js"],"sourcesContent":["const { MongoClient, ServerApiVersion } = require(\"mongodb\");\r\nconst uri = `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@cluster0.m65dh.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0`;\r\n\r\nconst client = new MongoClient(uri, {\r\n  serverApi: {\r\n    version: ServerApiVersion.v1,\r\n    strict: true,\r\n    deprecationErrors: true,\r\n  },\r\n});\r\n\r\nexport default async function getDBCollectionName(collectionName) {\r\n  const clientPromise = await client.connect();\r\n  return clientPromise.db(\"madchef-next-js\").collection(collectionName);\r\n}\r\n"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE;AACvC,MAAM,MAAM,CAAC,cAAc,EAAE,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,OAAO,CAAC,yEAAyE,CAAC;AAElJ,MAAM,SAAS,IAAI,YAAY,KAAK;IAClC,WAAW;QACT,SAAS,iBAAiB,EAAE;QAC5B,QAAQ;QACR,mBAAmB;IACrB;AACF;AAEe,eAAe,oBAAoB,cAAc;IAC9D,MAAM,gBAAgB,MAAM,OAAO,OAAO;IAC1C,OAAO,cAAc,EAAE,CAAC,mBAAmB,UAAU,CAAC;AACxD","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file://C%3A/ph-projects/madchef-a11-next.js/app/api/foods/%5Bid%5D/route.js"],"sourcesContent":["import getDBCollectionName from \"@/lib/getDBCollectionName\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function GET(req, { params }) {\r\n  const { id } = await params;\r\n\r\n  try {\r\n    const foodCollection = await getDBCollectionName(\"food\");\r\n    const result = await foodCollection.findOne({ _id: new ObjectId(id) });\r\n    console.log(result);\r\n    return NextResponse.json(result);\r\n  } catch (error) {\r\n    return NextResponse.json({ error: error });\r\n  }\r\n}\r\n\r\nexport async function PATCH(req, { params }) {\r\n  const body = await req.json();\r\n  const id = await params.id;\r\n\r\n  const filter = { _id: new ObjectId(id) };\r\n\r\n  const update = {\r\n    $set: body,\r\n  };\r\n\r\n  const foodCollection = await getDBCollectionName(\"food\");\r\n\r\n  try {\r\n    const result = await foodCollection.updateOne(filter, update, {\r\n      upsert: true,\r\n    });\r\n\r\n    return NextResponse.json({ success: true });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: error });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,GAAG,EAAE,EAAE,MAAM,EAAE;IACvC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IAErB,IAAI;QACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,4HAAA,CAAA,UAAmB,AAAD,EAAE;QACjD,MAAM,SAAS,MAAM,eAAe,OAAO,CAAC;YAAE,KAAK,IAAI,uGAAA,CAAA,WAAQ,CAAC;QAAI;QACpE,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAM;IAC1C;AACF;AAEO,eAAe,MAAM,GAAG,EAAE,EAAE,MAAM,EAAE;IACzC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,KAAK,MAAM,OAAO,EAAE;IAE1B,MAAM,SAAS;QAAE,KAAK,IAAI,uGAAA,CAAA,WAAQ,CAAC;IAAI;IAEvC,MAAM,SAAS;QACb,MAAM;IACR;IAEA,MAAM,iBAAiB,MAAM,CAAA,GAAA,4HAAA,CAAA,UAAmB,AAAD,EAAE;IAEjD,IAAI;QACF,MAAM,SAAS,MAAM,eAAe,SAAS,CAAC,QAAQ,QAAQ;YAC5D,QAAQ;QACV;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAM;IAC1C;AACF","debugId":null}}]
}